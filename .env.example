# ============================================================================
# FINANCIAL TRACKER - ENVIRONMENT CONFIGURATION
# ============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control (it's in .gitignore)

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
POSTGRES_DB=finance
POSTGRES_USER=finance
POSTGRES_PASSWORD=change_me

# Database connection settings (used by bot and dashboard services)
DB_HOST=db
DB_PORT=5432

# ============================================================================
# PGADMIN CONFIGURATION (Optional - for database management UI)
# ============================================================================
# Access pgAdmin at http://localhost:5050 after running 'make up'
PGADMIN_DEFAULT_EMAIL=admin@example.com
PGADMIN_DEFAULT_PASSWORD=change_me_admin

# ============================================================================
# TIMEZONE CONFIGURATION
# ============================================================================
# Use IANA timezone format
# Examples: America/Sao_Paulo, America/New_York, Europe/London, Asia/Tokyo
TZ=America/Sao_Paulo

# ============================================================================
# TELEGRAM BOT CONFIGURATION
# ============================================================================
# Get your bot token from @BotFather on Telegram
# Instructions: https://core.telegram.org/bots#6-botfather
TELEGRAM_BOT_TOKEN=replace_with_telegram_bot_token

# ============================================================================
# AUTHENTICATION - CRITICAL SECURITY SETTING
# ============================================================================
# ALLOWED_USER_ID must be set to your Telegram user ID (a positive integer)
# 
# How to find your Telegram user ID:
# 1. Message @userinfobot on Telegram
# 2. Copy the numeric ID it sends you
# 3. Paste it here
#
# SECURITY WARNING:
# - NEVER set this to 0 - this will disable all authentication!
# - NEVER set this to negative values
# - NEVER leave this unset in production
# - Only ONE user ID is supported (single-user bot)
#
# Example: ALLOWED_USER_ID=123456789
ALLOWED_USER_ID=123456789

# ============================================================================
# MONTHLY BUDGET CAP CONFIGURATION
# ============================================================================
# These environment variables control the dynamic monthly budget cap calculation
# displayed on the dashboard. All values are used to calculate a personalized
# budget limit based on business days, hourly rates, and deductions.
#
# SECURITY NOTE:
# These variables contain sensitive financial information and should NEVER be
# committed to version control. The calculation logic remains private by storing
# all parameters as environment variables.
#
# CALCULATION OVERVIEW:
# 1. Gross Revenue = Business Days × Daily Hours × Hourly Rate
# 2. Net Revenue = Gross Revenue - (Accounting Fees + DAS + Pro-Labore INSS)
# 3. Final Cap = Net Revenue - (Net Revenue × First Discount %) - Fixed Deduction

# ============================================================================
# Basic Parameters
# ============================================================================
# Your hourly rate in BRL (Brazilian Real)
# Example: 100 means R$ 100 per hour
CAP_HOURLY_RATE=100

# Number of working hours per day
# Example: 8 means 8 hours per day
CAP_DAILY_HOURS=8

# ============================================================================
# Deduction Parameters (Percentages as Decimals)
# ============================================================================
# DAS (Documento de Arrecadação do Simples Nacional) percentage
# Example: 0.15 means 15%
CAP_DAS_PERCENT=0.15

# Pro-Labore percentage of gross revenue
# Example: 0.10 means 10%
CAP_PRO_LABORE_PERCENT=0.10

# INSS (Instituto Nacional do Seguro Social) percentage applied to Pro-Labore
# Example: 0.03 means 3%
CAP_INSS_PERCENT=0.03

# ============================================================================
# Accounting Fees
# ============================================================================
# Monthly accounting fee in BRL
# Example: 1500 means R$ 1500 per month
CAP_ACCOUNTING_FEE=1500

# Calendar month when accounting fees start being charged (1-12)
# Example: 12 means December
CAP_ACCOUNTING_START_MONTH=12

# Year when accounting fees start being charged
# Example: 2025
CAP_ACCOUNTING_START_YEAR=2025

# ============================================================================
# Final Discounts
# ============================================================================
# First discount: percentage of net revenue (as decimal)
# Example: 0.10 means 10% of net revenue
CAP_FIRST_DISCOUNT_PERCENT=0.10

# Second discount: fixed amount in BRL
# Example: 1000 means R$ 1,000.00
CAP_SECOND_DISCOUNT_FIXED=1000.00

# ============================================================================
# Cap Display Settings
# ============================================================================
# Calendar month when cap calculation starts (1-12)
# Example: 10 means October (no cap displayed before this month)
CAP_START_MONTH=10

# Year when cap calculation starts
# Example: 2025 (no cap displayed before this year)
CAP_START_YEAR=2025

# ============================================================================
# Special Cases
# ============================================================================
# Fixed number of business days for October 2025 (started mid-month)
# Example: 13 means 13 business days were worked in October 2025
CAP_OCTOBER_BUSINESS_DAYS=13

# ============================================================================
# HOLIDAYS CONFIGURATION
# ============================================================================
# Business-day holidays are NOT stored in environment variables.
# Instead, they are configured in config/holidays.json
#
# The holidays.json file stores the number of non-working days per invoice month.
# This allows you to account for national holidays and personal days off that
# reduce the actual business days worked in a month.
#
# Starting from November 2025, holidays are subtracted from business days in the
# cap calculation. This ensures accurate budget calculations that reflect actual
# working days.
#
# Format in config/holidays.json:
# {
#   "2025": { "11": 2, "12": 3 },
#   "2026": { "1": 1, "2": 0 }
# }
#
# Where the first key is the invoice year, second key is invoice month (1-12),
# and the value is the number of holidays in that billing cycle.
#
# For more details, see the comments in config/holidays.json
